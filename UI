local Module = {}

function Module:GetChildrenByName(ins, name) 
    assert(typeof(ins) == "Instance","Invalid argument 1, Instance expected.")
    assert(typeof(name) == "string","Invalid argument 2. String expected.")
    local ToReturn = {}
    for i,v in pairs(ins:GetChildren()) do
        if v.Name == name then 
            table.insert(ToReturn,v)
        end
    end
    return ToReturn;
end
function Module:GetLastChildByName(ins,name) 
    assert(typeof(ins) == "Instance","Invalid argument 1, Instance expected.")
    assert(typeof(name) == "string","Invalid argument 2. String expected.")
    local LastOne;
    for i,v in pairs(ins:GetChildren()) do 
        if v.Name == name then LastOne = v end
    end
    return LastOne;
end

return Module;
